/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.utah.blulab.ievizgui;

import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import edu.utah.blulab.commandline.CommandLineException;
import edu.utah.blulab.commandline.IevizCmd;
import moonstone.rulebuilder.MoonstoneRuleInterface;
import tsl.utilities.FUtils;
import tsl.utilities.ListUtils;
import tsl.utilities.StrUtils;

/**
 *
 * @author leechristensen
 */
public class IEVizJFrame extends javax.swing.JFrame implements ActionListener {
	private MoonstoneRuleInterface msri = null;
	private IevizCmd iec = null;
	private String[] ontologyURIs = null;
	private String[] ontologyNames = null;
	private String[] annotatorNames = null;
	private String[] annotationToolNames = null;
	private String[] corpusNames = null;
	private String[] runIDs = null;
	private String[] pipelineNames = null;

	// private String[]

	/**
	 * Creates new form IEVizJFrame
	 */
	public IEVizJFrame() {
		try {
			this.iec = new IevizCmd();
			this.msri = new MoonstoneRuleInterface();
			this.gatherComboBoxValues();
		} catch (Exception e) {
			e.printStackTrace();
		}
		initComponents();
	}

	private void gatherComboBoxValues() throws Exception {

		this.ontologyURIs = IevizCmd.getOntologyInfo("uri");
		this.ontologyNames = new String[this.ontologyURIs.length];
		for (int i = 0; i < this.ontologyURIs.length; i++) {
			String uri = this.ontologyURIs[i];
			int index = uri.lastIndexOf(File.separatorChar);
			String oname = uri.substring(index + 1);
			this.ontologyNames[i] = oname;
		}
		ArrayList<String> anames = this.msri.getMoonstoneMySQLAPI().getWorkbenchMySQL().getTSLMySQL()
				.getStringsByFields("ieviz.Annotators", "annotatorName", null, null);
		this.annotatorNames = ListUtils.listToStringArray(anames);

		ArrayList<String> toolnames = this.msri.getMoonstoneMySQLAPI().getWorkbenchMySQL().getTSLMySQL()
				.getStringsByFields("ieviz.AnnotationTools", "toolName", null, null);
		this.annotationToolNames = ListUtils.listToStringArray(toolnames);

		ArrayList<String> corpusnames = this.msri.getMoonstoneMySQLAPI().getWorkbenchMySQL().getTSLMySQL()
				.getStringsByFields("ieviz.Corpora", "corpusName", null, null);
		this.corpusNames = ListUtils.listToStringArray(corpusnames);

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		AddCorpusButton = new javax.swing.JButton();
		AddAnnotatorButton = new javax.swing.JButton();
		AddNLPToolButton = new javax.swing.JButton();
		AddPipelineButton = new javax.swing.JButton();
		RunOntologyButton = new javax.swing.JButton();
		RunPipelineButton = new javax.swing.JButton();
		AddOntologyTypeSystem = new javax.swing.JButton();
		jPanel2 = new javax.swing.JPanel();
		OntologyCB = new javax.swing.JComboBox<>();
		NLPToolCB = new javax.swing.JComboBox<>();
		CorpusCB = new javax.swing.JComboBox<>();
		AnnotatorCB = new javax.swing.JComboBox<>();
		RunCB = new javax.swing.JComboBox<>();
		PipelineCB = new javax.swing.JComboBox<>();
		OntologyCBLabel = new javax.swing.JLabel();
		NLPToolCBLabel = new javax.swing.JLabel();
		CorpusCBLabel = new javax.swing.JLabel();
		AnnotatorCBLabel = new javax.swing.JLabel();
		RunCBLabel = new javax.swing.JLabel();
		PipelineCBLabel = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("IEVizTool Operations"));

		AddCorpusButton.setText("AddCorpus");
		AddCorpusButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AddCorpusButtonActionPerformed(evt);
			}
		});

		AddAnnotatorButton.setText("AddAnnotator");
		AddAnnotatorButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AddAnnotatorButtonActionPerformed(evt);
			}
		});

		AddNLPToolButton.setText("AddNLPTool");
		AddNLPToolButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AddNLPToolButtonActionPerformed(evt);
			}
		});

		AddPipelineButton.setText("AddPipeline");

		RunOntologyButton.setText("RunOntology");

		RunPipelineButton.setText("RunPipeline");

		AddOntologyTypeSystem.setText("AddOntologyTypeSystem");
		AddOntologyTypeSystem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				AddOntologyTypeSystemActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup().addComponent(AddCorpusButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(AddAnnotatorButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(AddNLPToolButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(AddPipelineButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(AddOntologyTypeSystem))
								.addGroup(jPanel1Layout.createSequentialGroup().addComponent(RunOntologyButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(RunPipelineButton)))
						.addContainerGap(158, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(25, 25, 25)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(AddCorpusButton).addComponent(AddAnnotatorButton)
								.addComponent(AddNLPToolButton).addComponent(AddPipelineButton)
								.addComponent(AddOntologyTypeSystem))
						.addGap(18, 18, 18)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(RunOntologyButton).addComponent(RunPipelineButton))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("IEVizTool Elements"));

		OntologyCB.setModel(new javax.swing.DefaultComboBoxModel<>(this.ontologyNames));

		NLPToolCB.setModel(new javax.swing.DefaultComboBoxModel<>(this.annotationToolNames));

		CorpusCB.setModel(new javax.swing.DefaultComboBoxModel<>(this.corpusNames));

		AnnotatorCB.setModel(new javax.swing.DefaultComboBoxModel<>(this.annotatorNames));

		RunCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Run1" }));

		PipelineCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pipeline1" }));

		OntologyCBLabel.setText("Ontologies");

		NLPToolCBLabel.setText("NLPTool");

		CorpusCBLabel.setText("Corpus");

		AnnotatorCBLabel.setText("Annotator");

		RunCBLabel.setText("Runs");

		PipelineCBLabel.setText("Pipelines");

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(OntologyCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(OntologyCBLabel))
						.addGap(18, 18, 18)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(NLPToolCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(NLPToolCBLabel))
						.addGap(18, 18, 18)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(CorpusCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(CorpusCBLabel))
						.addGap(18, 18, 18)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(AnnotatorCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(AnnotatorCBLabel))
						.addGap(18, 18, 18)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(RunCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(RunCBLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(PipelineCBLabel).addComponent(PipelineCB,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(OntologyCBLabel).addComponent(NLPToolCBLabel).addComponent(CorpusCBLabel)
								.addComponent(AnnotatorCBLabel).addComponent(RunCBLabel).addComponent(PipelineCBLabel))
						.addGap(3, 3, 3)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(OntologyCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(NLPToolCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(CorpusCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(AnnotatorCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(RunCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(PipelineCB, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(261, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(layout.createSequentialGroup()
								.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(0, 0, Short.MAX_VALUE)))
				.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(27, 27, 27)
						.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(148, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents
	
	private void AddNLPToolButtonActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			String tname = JOptionPane.showInputDialog(new JFrame(), "Annotation Tool Name");
			int index = StrUtils.getMatchingStringIndex(this.annotationToolNames, tname);
			if (index < 0) {
				workbench.api.db.MySQLAPI wms = this.msri.getMoonstoneMySQLAPI().getWorkbenchMySQL();
				wms.getAnnotationToolID(tname, "<No Description>");
				this.gatherComboBoxValues();
				DefaultComboBoxModel model = (DefaultComboBoxModel) this.CorpusCB.getModel();
				model.insertElementAt(tname, model.getSize());
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void AddOntologyTypeSystemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ImportTypeSystemButtonActionPerformed
		String oname = (String) this.OntologyCB.getModel().getSelectedItem();
		if (oname != null) {
			
			int index = StrUtils.getMatchingStringIndex(this.ontologyNames, oname);
			String uri = this.ontologyURIs[index];
			this.msri.analyzeOWLOntology(uri, true, true);
			this.msri.getMoonstoneMySQLAPI()
					.storeAnnotationTypeSystem(this.msri.getKnowledgeEngine().getCurrentOntology());
		}

	}// GEN-LAST:event_ImportTypeSystemButtonActionPerformed

	private void AddCorpusButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AddCorpusButtonActionPerformed
		try {
			File directory = FUtils.chooseDirectory((String) null, "Corpus Folder");
			if (directory instanceof File && ((File) directory).isDirectory()) {
				String dpath = directory.getAbsolutePath();
				int index = dpath.lastIndexOf(File.separatorChar);
				String dname = dpath.substring(index + 1);
				boolean success = this.msri.getMoonstoneMySQLAPI().getWorkbenchMySQL().getTSLMySQL()
						.storeDocumentsFromDirectory(dname, dpath);
				if (!success) {
					JOptionPane.showMessageDialog(new JFrame(), "Unable to store corpus");
				} else {
					this.gatherComboBoxValues();
					DefaultComboBoxModel model = (DefaultComboBoxModel) this.CorpusCB.getModel();
					model.insertElementAt(dname, model.getSize());
					// model.removeAllElements();
					// for (int i = 0; i < this.corpusNames.length; i++) {
					// model.insertElementAt(this.corpusNames[i], 0);
					// }
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void AddAnnotatorButtonActionPerformed(java.awt.event.ActionEvent evt) {
		workbench.api.db.MySQLAPI wms = this.msri.getMoonstoneMySQLAPI().getWorkbenchMySQL();
		String aname = JOptionPane.showInputDialog(new JFrame(), "Annotator Name");
		wms.storeAnnotator(aname, "<Affiliation Unknown>");
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(IEVizJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(IEVizJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(IEVizJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(IEVizJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new IEVizJFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton AddAnnotatorButton;
	private javax.swing.JButton AddCorpusButton;
	private javax.swing.JButton AddNLPToolButton;
	private javax.swing.JButton AddOntologyTypeSystem;
	private javax.swing.JButton AddPipelineButton;
	private javax.swing.JComboBox<String> AnnotatorCB;
	private javax.swing.JLabel AnnotatorCBLabel;
	private javax.swing.JComboBox<String> CorpusCB;
	private javax.swing.JLabel CorpusCBLabel;
	private javax.swing.JComboBox<String> NLPToolCB;
	private javax.swing.JLabel NLPToolCBLabel;
	private javax.swing.JComboBox<String> OntologyCB;
	private javax.swing.JLabel OntologyCBLabel;
	private javax.swing.JComboBox<String> PipelineCB;
	private javax.swing.JLabel PipelineCBLabel;
	private javax.swing.JComboBox<String> RunCB;
	private javax.swing.JLabel RunCBLabel;
	private javax.swing.JButton RunOntologyButton;
	private javax.swing.JButton RunPipelineButton;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	// End of variables declaration//GEN-END:variables

	public void actionPerformed(ActionEvent e) {
		System.out.println("Action");
	}

}
